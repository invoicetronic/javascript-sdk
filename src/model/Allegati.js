/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Allegati model module.
 * @module model/Allegati
 * @version 1
 */
class Allegati {
    /**
     * Constructs a new <code>Allegati</code>.
     * @alias module:model/Allegati
     */
    constructor() { 
        
        Allegati.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Allegati</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Allegati} obj Optional instance to populate.
     * @return {module:model/Allegati} The populated <code>Allegati</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Allegati();

            if (data.hasOwnProperty('nome_attachment')) {
                obj['nome_attachment'] = ApiClient.convertToType(data['nome_attachment'], 'String');
            }
            if (data.hasOwnProperty('algoritmo_compressione')) {
                obj['algoritmo_compressione'] = ApiClient.convertToType(data['algoritmo_compressione'], 'String');
            }
            if (data.hasOwnProperty('formato_attachment')) {
                obj['formato_attachment'] = ApiClient.convertToType(data['formato_attachment'], 'String');
            }
            if (data.hasOwnProperty('descrizione_attachment')) {
                obj['descrizione_attachment'] = ApiClient.convertToType(data['descrizione_attachment'], 'String');
            }
            if (data.hasOwnProperty('attachment')) {
                obj['attachment'] = ApiClient.convertToType(data['attachment'], 'Blob');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Allegati</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Allegati</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['nome_attachment'] && !(typeof data['nome_attachment'] === 'string' || data['nome_attachment'] instanceof String)) {
            throw new Error("Expected the field `nome_attachment` to be a primitive type in the JSON string but got " + data['nome_attachment']);
        }
        // ensure the json data is a string
        if (data['algoritmo_compressione'] && !(typeof data['algoritmo_compressione'] === 'string' || data['algoritmo_compressione'] instanceof String)) {
            throw new Error("Expected the field `algoritmo_compressione` to be a primitive type in the JSON string but got " + data['algoritmo_compressione']);
        }
        // ensure the json data is a string
        if (data['formato_attachment'] && !(typeof data['formato_attachment'] === 'string' || data['formato_attachment'] instanceof String)) {
            throw new Error("Expected the field `formato_attachment` to be a primitive type in the JSON string but got " + data['formato_attachment']);
        }
        // ensure the json data is a string
        if (data['descrizione_attachment'] && !(typeof data['descrizione_attachment'] === 'string' || data['descrizione_attachment'] instanceof String)) {
            throw new Error("Expected the field `descrizione_attachment` to be a primitive type in the JSON string but got " + data['descrizione_attachment']);
        }

        return true;
    }


}



/**
 * @member {String} nome_attachment
 */
Allegati.prototype['nome_attachment'] = undefined;

/**
 * @member {String} algoritmo_compressione
 */
Allegati.prototype['algoritmo_compressione'] = undefined;

/**
 * @member {String} formato_attachment
 */
Allegati.prototype['formato_attachment'] = undefined;

/**
 * @member {String} descrizione_attachment
 */
Allegati.prototype['descrizione_attachment'] = undefined;

/**
 * @member {Blob} attachment
 */
Allegati.prototype['attachment'] = undefined;






export default Allegati;

