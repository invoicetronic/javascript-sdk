/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatiBollo from './DatiBollo';
import DatiCassaPrevidenziale from './DatiCassaPrevidenziale';
import DatiRitenuta from './DatiRitenuta';
import ScontoMaggiorazione from './ScontoMaggiorazione';

/**
 * The DatiGeneraliDocumento model module.
 * @module model/DatiGeneraliDocumento
 * @version 1.0.0
 */
class DatiGeneraliDocumento {
    /**
     * Constructs a new <code>DatiGeneraliDocumento</code>.
     * @alias module:model/DatiGeneraliDocumento
     */
    constructor() { 
        
        DatiGeneraliDocumento.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatiGeneraliDocumento</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatiGeneraliDocumento} obj Optional instance to populate.
     * @return {module:model/DatiGeneraliDocumento} The populated <code>DatiGeneraliDocumento</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatiGeneraliDocumento();

            if (data.hasOwnProperty('tipo_documento')) {
                obj['tipo_documento'] = ApiClient.convertToType(data['tipo_documento'], 'String');
            }
            if (data.hasOwnProperty('divisa')) {
                obj['divisa'] = ApiClient.convertToType(data['divisa'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'Date');
            }
            if (data.hasOwnProperty('numero')) {
                obj['numero'] = ApiClient.convertToType(data['numero'], 'String');
            }
            if (data.hasOwnProperty('dati_ritenuta')) {
                obj['dati_ritenuta'] = ApiClient.convertToType(data['dati_ritenuta'], [DatiRitenuta]);
            }
            if (data.hasOwnProperty('dati_bollo')) {
                obj['dati_bollo'] = DatiBollo.constructFromObject(data['dati_bollo']);
            }
            if (data.hasOwnProperty('dati_cassa_previdenziale')) {
                obj['dati_cassa_previdenziale'] = ApiClient.convertToType(data['dati_cassa_previdenziale'], [DatiCassaPrevidenziale]);
            }
            if (data.hasOwnProperty('sconto_maggiorazione')) {
                obj['sconto_maggiorazione'] = ApiClient.convertToType(data['sconto_maggiorazione'], [ScontoMaggiorazione]);
            }
            if (data.hasOwnProperty('importo_totale_documento')) {
                obj['importo_totale_documento'] = ApiClient.convertToType(data['importo_totale_documento'], 'Number');
            }
            if (data.hasOwnProperty('arrotondamento')) {
                obj['arrotondamento'] = ApiClient.convertToType(data['arrotondamento'], 'Number');
            }
            if (data.hasOwnProperty('causale')) {
                obj['causale'] = ApiClient.convertToType(data['causale'], ['String']);
            }
            if (data.hasOwnProperty('art73')) {
                obj['art73'] = ApiClient.convertToType(data['art73'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatiGeneraliDocumento</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatiGeneraliDocumento</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tipo_documento'] && !(typeof data['tipo_documento'] === 'string' || data['tipo_documento'] instanceof String)) {
            throw new Error("Expected the field `tipo_documento` to be a primitive type in the JSON string but got " + data['tipo_documento']);
        }
        // ensure the json data is a string
        if (data['divisa'] && !(typeof data['divisa'] === 'string' || data['divisa'] instanceof String)) {
            throw new Error("Expected the field `divisa` to be a primitive type in the JSON string but got " + data['divisa']);
        }
        // ensure the json data is a string
        if (data['numero'] && !(typeof data['numero'] === 'string' || data['numero'] instanceof String)) {
            throw new Error("Expected the field `numero` to be a primitive type in the JSON string but got " + data['numero']);
        }
        if (data['dati_ritenuta']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dati_ritenuta'])) {
                throw new Error("Expected the field `dati_ritenuta` to be an array in the JSON data but got " + data['dati_ritenuta']);
            }
            // validate the optional field `dati_ritenuta` (array)
            for (const item of data['dati_ritenuta']) {
                DatiRitenuta.validateJSON(item);
            };
        }
        // validate the optional field `dati_bollo`
        if (data['dati_bollo']) { // data not null
          DatiBollo.validateJSON(data['dati_bollo']);
        }
        if (data['dati_cassa_previdenziale']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dati_cassa_previdenziale'])) {
                throw new Error("Expected the field `dati_cassa_previdenziale` to be an array in the JSON data but got " + data['dati_cassa_previdenziale']);
            }
            // validate the optional field `dati_cassa_previdenziale` (array)
            for (const item of data['dati_cassa_previdenziale']) {
                DatiCassaPrevidenziale.validateJSON(item);
            };
        }
        if (data['sconto_maggiorazione']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sconto_maggiorazione'])) {
                throw new Error("Expected the field `sconto_maggiorazione` to be an array in the JSON data but got " + data['sconto_maggiorazione']);
            }
            // validate the optional field `sconto_maggiorazione` (array)
            for (const item of data['sconto_maggiorazione']) {
                ScontoMaggiorazione.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['causale'])) {
            throw new Error("Expected the field `causale` to be an array in the JSON data but got " + data['causale']);
        }
        // ensure the json data is a string
        if (data['art73'] && !(typeof data['art73'] === 'string' || data['art73'] instanceof String)) {
            throw new Error("Expected the field `art73` to be a primitive type in the JSON string but got " + data['art73']);
        }

        return true;
    }


}



/**
 * @member {String} tipo_documento
 */
DatiGeneraliDocumento.prototype['tipo_documento'] = undefined;

/**
 * @member {String} divisa
 */
DatiGeneraliDocumento.prototype['divisa'] = undefined;

/**
 * @member {Date} data
 */
DatiGeneraliDocumento.prototype['data'] = undefined;

/**
 * @member {String} numero
 */
DatiGeneraliDocumento.prototype['numero'] = undefined;

/**
 * @member {Array.<module:model/DatiRitenuta>} dati_ritenuta
 */
DatiGeneraliDocumento.prototype['dati_ritenuta'] = undefined;

/**
 * @member {module:model/DatiBollo} dati_bollo
 */
DatiGeneraliDocumento.prototype['dati_bollo'] = undefined;

/**
 * @member {Array.<module:model/DatiCassaPrevidenziale>} dati_cassa_previdenziale
 */
DatiGeneraliDocumento.prototype['dati_cassa_previdenziale'] = undefined;

/**
 * @member {Array.<module:model/ScontoMaggiorazione>} sconto_maggiorazione
 */
DatiGeneraliDocumento.prototype['sconto_maggiorazione'] = undefined;

/**
 * @member {Number} importo_totale_documento
 */
DatiGeneraliDocumento.prototype['importo_totale_documento'] = undefined;

/**
 * @member {Number} arrotondamento
 */
DatiGeneraliDocumento.prototype['arrotondamento'] = undefined;

/**
 * @member {Array.<String>} causale
 */
DatiGeneraliDocumento.prototype['causale'] = undefined;

/**
 * @member {String} art73
 */
DatiGeneraliDocumento.prototype['art73'] = undefined;






export default DatiGeneraliDocumento;

