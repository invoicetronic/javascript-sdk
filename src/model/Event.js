/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Event model module.
 * @module model/Event
 * @version 1
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * @alias module:model/Event
     */
    constructor() { 
        
        Event.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('api_key_id')) {
                obj['api_key_id'] = ApiClient.convertToType(data['api_key_id'], 'Number');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('api_version')) {
                obj['api_version'] = ApiClient.convertToType(data['api_version'], 'Number');
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'Number');
            }
            if (data.hasOwnProperty('date_time')) {
                obj['date_time'] = ApiClient.convertToType(data['date_time'], 'Date');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');
            }
            if (data.hasOwnProperty('response_body')) {
                obj['response_body'] = ApiClient.convertToType(data['response_body'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Event</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // ensure the json data is a string
        if (data['response_body'] && !(typeof data['response_body'] === 'string' || data['response_body'] instanceof String)) {
            throw new Error("Expected the field `response_body` to be a primitive type in the JSON string but got " + data['response_body']);
        }

        return true;
    }


}



/**
 * Unique identifier. Leave it at 0 for new records as it will be set automatically.
 * @member {Number} id
 */
Event.prototype['id'] = undefined;

/**
 * Creation date. It is set automatically.
 * @member {Date} created
 */
Event.prototype['created'] = undefined;

/**
 * Row version, for optimistic concurrency. It is set automatically.
 * @member {Number} version
 */
Event.prototype['version'] = undefined;

/**
 * User id.
 * @member {Number} user_id
 */
Event.prototype['user_id'] = undefined;

/**
 * Api key id.
 * @member {Number} api_key_id
 */
Event.prototype['api_key_id'] = undefined;

/**
 * Company id.
 * @member {Number} company_id
 */
Event.prototype['company_id'] = undefined;

/**
 * Request method.
 * @member {String} method
 */
Event.prototype['method'] = undefined;

/**
 * Request query.
 * @member {String} query
 */
Event.prototype['query'] = undefined;

/**
 * API endpoint.
 * @member {String} endpoint
 */
Event.prototype['endpoint'] = undefined;

/**
 * Api version.
 * @member {Number} api_version
 */
Event.prototype['api_version'] = undefined;

/**
 * Status code returned by the API.
 * @member {Number} status_code
 */
Event.prototype['status_code'] = undefined;

/**
 * Date and time of the request.
 * @member {Date} date_time
 */
Event.prototype['date_time'] = undefined;

/**
 * Response error.
 * @member {String} error
 */
Event.prototype['error'] = undefined;

/**
 * Wether the request was successful.
 * @member {Boolean} success
 */
Event.prototype['success'] = undefined;

/**
 * Response payload. It is guaranteed to be cyphered at rest.
 * @member {String} response_body
 */
Event.prototype['response_body'] = undefined;






export default Event;

