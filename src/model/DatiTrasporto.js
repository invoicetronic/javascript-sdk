/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatiAnagraficiVettore from './DatiAnagraficiVettore';
import IndirizzoResa from './IndirizzoResa';

/**
 * The DatiTrasporto model module.
 * @module model/DatiTrasporto
 * @version 1
 */
class DatiTrasporto {
    /**
     * Constructs a new <code>DatiTrasporto</code>.
     * @alias module:model/DatiTrasporto
     */
    constructor() { 
        
        DatiTrasporto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatiTrasporto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatiTrasporto} obj Optional instance to populate.
     * @return {module:model/DatiTrasporto} The populated <code>DatiTrasporto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatiTrasporto();

            if (data.hasOwnProperty('dati_anagrafici_vettore')) {
                obj['dati_anagrafici_vettore'] = DatiAnagraficiVettore.constructFromObject(data['dati_anagrafici_vettore']);
            }
            if (data.hasOwnProperty('mezzo_trasporto')) {
                obj['mezzo_trasporto'] = ApiClient.convertToType(data['mezzo_trasporto'], 'String');
            }
            if (data.hasOwnProperty('causale_trasporto')) {
                obj['causale_trasporto'] = ApiClient.convertToType(data['causale_trasporto'], 'String');
            }
            if (data.hasOwnProperty('numero_colli')) {
                obj['numero_colli'] = ApiClient.convertToType(data['numero_colli'], 'Number');
            }
            if (data.hasOwnProperty('descrizione')) {
                obj['descrizione'] = ApiClient.convertToType(data['descrizione'], 'String');
            }
            if (data.hasOwnProperty('unita_misura_peso')) {
                obj['unita_misura_peso'] = ApiClient.convertToType(data['unita_misura_peso'], 'String');
            }
            if (data.hasOwnProperty('peso_lordo')) {
                obj['peso_lordo'] = ApiClient.convertToType(data['peso_lordo'], 'Number');
            }
            if (data.hasOwnProperty('peso_netto')) {
                obj['peso_netto'] = ApiClient.convertToType(data['peso_netto'], 'Number');
            }
            if (data.hasOwnProperty('data_ora_ritiro')) {
                obj['data_ora_ritiro'] = ApiClient.convertToType(data['data_ora_ritiro'], 'Date');
            }
            if (data.hasOwnProperty('data_inizio_trasporto')) {
                obj['data_inizio_trasporto'] = ApiClient.convertToType(data['data_inizio_trasporto'], 'Date');
            }
            if (data.hasOwnProperty('tipo_resa')) {
                obj['tipo_resa'] = ApiClient.convertToType(data['tipo_resa'], 'String');
            }
            if (data.hasOwnProperty('indirizzo_resa')) {
                obj['indirizzo_resa'] = IndirizzoResa.constructFromObject(data['indirizzo_resa']);
            }
            if (data.hasOwnProperty('data_ora_consegna')) {
                obj['data_ora_consegna'] = ApiClient.convertToType(data['data_ora_consegna'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatiTrasporto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatiTrasporto</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dati_anagrafici_vettore`
        if (data['dati_anagrafici_vettore']) { // data not null
          DatiAnagraficiVettore.validateJSON(data['dati_anagrafici_vettore']);
        }
        // ensure the json data is a string
        if (data['mezzo_trasporto'] && !(typeof data['mezzo_trasporto'] === 'string' || data['mezzo_trasporto'] instanceof String)) {
            throw new Error("Expected the field `mezzo_trasporto` to be a primitive type in the JSON string but got " + data['mezzo_trasporto']);
        }
        // ensure the json data is a string
        if (data['causale_trasporto'] && !(typeof data['causale_trasporto'] === 'string' || data['causale_trasporto'] instanceof String)) {
            throw new Error("Expected the field `causale_trasporto` to be a primitive type in the JSON string but got " + data['causale_trasporto']);
        }
        // ensure the json data is a string
        if (data['descrizione'] && !(typeof data['descrizione'] === 'string' || data['descrizione'] instanceof String)) {
            throw new Error("Expected the field `descrizione` to be a primitive type in the JSON string but got " + data['descrizione']);
        }
        // ensure the json data is a string
        if (data['unita_misura_peso'] && !(typeof data['unita_misura_peso'] === 'string' || data['unita_misura_peso'] instanceof String)) {
            throw new Error("Expected the field `unita_misura_peso` to be a primitive type in the JSON string but got " + data['unita_misura_peso']);
        }
        // ensure the json data is a string
        if (data['tipo_resa'] && !(typeof data['tipo_resa'] === 'string' || data['tipo_resa'] instanceof String)) {
            throw new Error("Expected the field `tipo_resa` to be a primitive type in the JSON string but got " + data['tipo_resa']);
        }
        // validate the optional field `indirizzo_resa`
        if (data['indirizzo_resa']) { // data not null
          IndirizzoResa.validateJSON(data['indirizzo_resa']);
        }

        return true;
    }


}



/**
 * @member {module:model/DatiAnagraficiVettore} dati_anagrafici_vettore
 */
DatiTrasporto.prototype['dati_anagrafici_vettore'] = undefined;

/**
 * @member {String} mezzo_trasporto
 */
DatiTrasporto.prototype['mezzo_trasporto'] = undefined;

/**
 * @member {String} causale_trasporto
 */
DatiTrasporto.prototype['causale_trasporto'] = undefined;

/**
 * @member {Number} numero_colli
 */
DatiTrasporto.prototype['numero_colli'] = undefined;

/**
 * @member {String} descrizione
 */
DatiTrasporto.prototype['descrizione'] = undefined;

/**
 * @member {String} unita_misura_peso
 */
DatiTrasporto.prototype['unita_misura_peso'] = undefined;

/**
 * @member {Number} peso_lordo
 */
DatiTrasporto.prototype['peso_lordo'] = undefined;

/**
 * @member {Number} peso_netto
 */
DatiTrasporto.prototype['peso_netto'] = undefined;

/**
 * @member {Date} data_ora_ritiro
 */
DatiTrasporto.prototype['data_ora_ritiro'] = undefined;

/**
 * @member {Date} data_inizio_trasporto
 */
DatiTrasporto.prototype['data_inizio_trasporto'] = undefined;

/**
 * @member {String} tipo_resa
 */
DatiTrasporto.prototype['tipo_resa'] = undefined;

/**
 * @member {module:model/IndirizzoResa} indirizzo_resa
 */
DatiTrasporto.prototype['indirizzo_resa'] = undefined;

/**
 * @member {Date} data_ora_consegna
 */
DatiTrasporto.prototype['data_ora_consegna'] = undefined;






export default DatiTrasporto;

