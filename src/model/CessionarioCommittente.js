/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatiAnagraficiCessionarioCommittente from './DatiAnagraficiCessionarioCommittente';
import RappresentanteFiscaleCessionarioCommittente from './RappresentanteFiscaleCessionarioCommittente';
import SedeCessionarioCommittente from './SedeCessionarioCommittente';
import StabileOrganizzazione from './StabileOrganizzazione';

/**
 * The CessionarioCommittente model module.
 * @module model/CessionarioCommittente
 * @version 1.0.0
 */
class CessionarioCommittente {
    /**
     * Constructs a new <code>CessionarioCommittente</code>.
     * @alias module:model/CessionarioCommittente
     */
    constructor() { 
        
        CessionarioCommittente.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CessionarioCommittente</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CessionarioCommittente} obj Optional instance to populate.
     * @return {module:model/CessionarioCommittente} The populated <code>CessionarioCommittente</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CessionarioCommittente();

            if (data.hasOwnProperty('dati_anagrafici')) {
                obj['dati_anagrafici'] = DatiAnagraficiCessionarioCommittente.constructFromObject(data['dati_anagrafici']);
            }
            if (data.hasOwnProperty('sede')) {
                obj['sede'] = SedeCessionarioCommittente.constructFromObject(data['sede']);
            }
            if (data.hasOwnProperty('stabile_organizzazione')) {
                obj['stabile_organizzazione'] = StabileOrganizzazione.constructFromObject(data['stabile_organizzazione']);
            }
            if (data.hasOwnProperty('rappresentante_fiscale')) {
                obj['rappresentante_fiscale'] = RappresentanteFiscaleCessionarioCommittente.constructFromObject(data['rappresentante_fiscale']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CessionarioCommittente</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CessionarioCommittente</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dati_anagrafici`
        if (data['dati_anagrafici']) { // data not null
          DatiAnagraficiCessionarioCommittente.validateJSON(data['dati_anagrafici']);
        }
        // validate the optional field `sede`
        if (data['sede']) { // data not null
          SedeCessionarioCommittente.validateJSON(data['sede']);
        }
        // validate the optional field `stabile_organizzazione`
        if (data['stabile_organizzazione']) { // data not null
          StabileOrganizzazione.validateJSON(data['stabile_organizzazione']);
        }
        // validate the optional field `rappresentante_fiscale`
        if (data['rappresentante_fiscale']) { // data not null
          RappresentanteFiscaleCessionarioCommittente.validateJSON(data['rappresentante_fiscale']);
        }

        return true;
    }


}



/**
 * @member {module:model/DatiAnagraficiCessionarioCommittente} dati_anagrafici
 */
CessionarioCommittente.prototype['dati_anagrafici'] = undefined;

/**
 * @member {module:model/SedeCessionarioCommittente} sede
 */
CessionarioCommittente.prototype['sede'] = undefined;

/**
 * @member {module:model/StabileOrganizzazione} stabile_organizzazione
 */
CessionarioCommittente.prototype['stabile_organizzazione'] = undefined;

/**
 * @member {module:model/RappresentanteFiscaleCessionarioCommittente} rappresentante_fiscale
 */
CessionarioCommittente.prototype['rappresentante_fiscale'] = undefined;






export default CessionarioCommittente;

