/**
 * Invoicetronic API
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CedentePrestatore from './CedentePrestatore';
import CessionarioCommittente from './CessionarioCommittente';
import DatiTrasmissione from './DatiTrasmissione';
import RappresentanteFiscale from './RappresentanteFiscale';
import TerzoIntermediarioOSoggettoEmittente from './TerzoIntermediarioOSoggettoEmittente';

/**
 * The FatturaElettronicaHeader model module.
 * @module model/FatturaElettronicaHeader
 * @version 1.0.0
 */
class FatturaElettronicaHeader {
    /**
     * Constructs a new <code>FatturaElettronicaHeader</code>.
     * @alias module:model/FatturaElettronicaHeader
     */
    constructor() { 
        
        FatturaElettronicaHeader.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FatturaElettronicaHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FatturaElettronicaHeader} obj Optional instance to populate.
     * @return {module:model/FatturaElettronicaHeader} The populated <code>FatturaElettronicaHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FatturaElettronicaHeader();

            if (data.hasOwnProperty('dati_trasmissione')) {
                obj['dati_trasmissione'] = DatiTrasmissione.constructFromObject(data['dati_trasmissione']);
            }
            if (data.hasOwnProperty('cedente_prestatore')) {
                obj['cedente_prestatore'] = CedentePrestatore.constructFromObject(data['cedente_prestatore']);
            }
            if (data.hasOwnProperty('RappresentanteFiscale')) {
                obj['RappresentanteFiscale'] = RappresentanteFiscale.constructFromObject(data['RappresentanteFiscale']);
            }
            if (data.hasOwnProperty('cessionario_committente')) {
                obj['cessionario_committente'] = CessionarioCommittente.constructFromObject(data['cessionario_committente']);
            }
            if (data.hasOwnProperty('terzo_intermediario_o_soggetto_emittente')) {
                obj['terzo_intermediario_o_soggetto_emittente'] = TerzoIntermediarioOSoggettoEmittente.constructFromObject(data['terzo_intermediario_o_soggetto_emittente']);
            }
            if (data.hasOwnProperty('soggetto_emittente')) {
                obj['soggetto_emittente'] = ApiClient.convertToType(data['soggetto_emittente'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FatturaElettronicaHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FatturaElettronicaHeader</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dati_trasmissione`
        if (data['dati_trasmissione']) { // data not null
          DatiTrasmissione.validateJSON(data['dati_trasmissione']);
        }
        // validate the optional field `cedente_prestatore`
        if (data['cedente_prestatore']) { // data not null
          CedentePrestatore.validateJSON(data['cedente_prestatore']);
        }
        // validate the optional field `RappresentanteFiscale`
        if (data['RappresentanteFiscale']) { // data not null
          RappresentanteFiscale.validateJSON(data['RappresentanteFiscale']);
        }
        // validate the optional field `cessionario_committente`
        if (data['cessionario_committente']) { // data not null
          CessionarioCommittente.validateJSON(data['cessionario_committente']);
        }
        // validate the optional field `terzo_intermediario_o_soggetto_emittente`
        if (data['terzo_intermediario_o_soggetto_emittente']) { // data not null
          TerzoIntermediarioOSoggettoEmittente.validateJSON(data['terzo_intermediario_o_soggetto_emittente']);
        }
        // ensure the json data is a string
        if (data['soggetto_emittente'] && !(typeof data['soggetto_emittente'] === 'string' || data['soggetto_emittente'] instanceof String)) {
            throw new Error("Expected the field `soggetto_emittente` to be a primitive type in the JSON string but got " + data['soggetto_emittente']);
        }

        return true;
    }


}



/**
 * @member {module:model/DatiTrasmissione} dati_trasmissione
 */
FatturaElettronicaHeader.prototype['dati_trasmissione'] = undefined;

/**
 * @member {module:model/CedentePrestatore} cedente_prestatore
 */
FatturaElettronicaHeader.prototype['cedente_prestatore'] = undefined;

/**
 * @member {module:model/RappresentanteFiscale} RappresentanteFiscale
 */
FatturaElettronicaHeader.prototype['RappresentanteFiscale'] = undefined;

/**
 * @member {module:model/CessionarioCommittente} cessionario_committente
 */
FatturaElettronicaHeader.prototype['cessionario_committente'] = undefined;

/**
 * @member {module:model/TerzoIntermediarioOSoggettoEmittente} terzo_intermediario_o_soggetto_emittente
 */
FatturaElettronicaHeader.prototype['terzo_intermediario_o_soggetto_emittente'] = undefined;

/**
 * @member {String} soggetto_emittente
 */
FatturaElettronicaHeader.prototype['soggetto_emittente'] = undefined;






export default FatturaElettronicaHeader;

